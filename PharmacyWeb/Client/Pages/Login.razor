@page "/login"
@using PharmacyWeb.Shared.Models

@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject IAuthService AuthService
@inject HttpClient http

<h3>Авторизация</h3>
<h5>@AuthService.Message</h5>


<EditForm Model="@user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="username">Имя пользователя</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control" />
        <ValidationMessage For="@(()=> user.Username)"/>
    </div>
    <div class="form-group">
        <label for="password">Пароль</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
         <ValidationMessage For="@(()=> user.Password)"/>
    </div>
    <button type="submit" class="btn btn-primary mt-2">Войти</button>
</EditForm>




@code {
    private UserLogin user = new();

    protected override void OnInitialized()
    {
        AuthService.AuthStatus += StateHasChanged;
    }

    public void Dispose()
    {
        AuthService.AuthStatus -= StateHasChanged;
    }

    private async void HandleLogin()
    {
        await LocalStorage.SetItemAsync<string>("username", user.Username);
        await LocalStorage.SetItemAsync<string>("password", user.Password);
        await AuthStateProvider.GetAuthenticationStateAsync();
        if(AuthService.User != null)
        {
            NavigationManager.NavigateTo("");
        }
    }
}




