@page "/register"
@using PharmacyWeb.Shared.Models

@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ILocalStorageService LocalStorage


<h3>Регистрация</h3>
<h5>@AuthService.Message</h5>



<EditForm Model="@user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
   
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control" />
        <ValidationMessage For="@(() => user.Username)" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
   
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>




@code {
    private UserRegister user = new();
    protected override void OnInitialized()
    {
        AuthService.AuthStatus += StateHasChanged;
    }

    public void Dispose()
    {
        AuthService.AuthStatus -= StateHasChanged;
    }


    private async void HandleRegistration()
    {
        var success = await AuthService.Register(user);
        if(success)
        {
            AuthService.Message = "";
            NavigationManager.NavigateTo("login");
        }
    }
}
