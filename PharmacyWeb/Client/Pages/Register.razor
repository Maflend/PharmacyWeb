@page "/register"
@using PharmacyWeb.Shared.Models

@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ILocalStorageService LocalStorage


<div class="shadow rounded mb-4 p-3 border border-3 border-secondary" style="background-color: white; width:100%; height:max-content; opacity:0.98; ">
    <h3>Регистрация</h3>
    <h5>@AuthService.Message</h5>
</div>



<div class="p-3 shadow rounded border border-3 border-secondary" style="background-color:white;">

    <EditForm Model="@user" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
   
        <div class="form-group">
            <label for="username">Имя пользователя</label>
            <InputText id="username" @bind-Value="user.Username" class="form-control" />
            <ValidationMessage For="@(() => user.Username)" />
        </div>
        <div class="form-group">
            <label for="password">Пароль</label>
            <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
   
        <button type="submit" class="btn btn-primary mt-2">Зарегистрироваться</button>
    </EditForm>
</div>





@code {
    private UserRegister user = new();
    protected override void OnInitialized()
    {
        AuthService.AuthStatus += StateHasChanged;
    }

    public void Dispose()
    {
        AuthService.AuthStatus -= StateHasChanged;
    }


    private async void HandleRegistration()
    {
        var success = await AuthService.Register(user);
        if(success)
        {
            AuthService.Message = "";
            NavigationManager.NavigateTo("login");
        }
    }
}
