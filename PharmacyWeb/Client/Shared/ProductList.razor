@inject IProductService ProductService

@if(ProductService.Products is null || ProductService.Products.Count == 0)
{
    <h3>Loading...</h3>
}
else
{
    <div class="row" style="background-image: url(https://images.freeimages.com/images/premium/previews/4169/41694330-seamless-background-with-chemical-flasks.jpg">
        @foreach(var product in ProductService.Products)
        {
            <div class="col">
                    <div class="card text-center bg-light mb-4 shadow rounded" style="width:20rem; height:15rem; opacity: 0.98">
                      
                     
                          

                        <div class="card-header" style="background-color: rgba(51, 170, 51, .4) ">
                            <strong>@product.Name</strong>
                        </div>
                        <div class="card-body">
                            <div class="card-text">
                                @if(product.Description.Length > 70)
                                {
                                    <span>@product.Description.Substring(0,70) ...</span>
                                }
                                else
                                {
                                    @product.Description
                                }
                            </div> 
                        </div>
                        <div class="mb-2" style="color:green;"><h5>@product.RetailPrice р</h5></div>
                        <button class="btn btn-outline-dark  mb-0">В корзину</button>
                    </div>
            </div>
        }
    </div>

}






@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }


   
}
