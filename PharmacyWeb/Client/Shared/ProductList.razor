
@inject IProductService ProductService
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService
@inject ICartService CartService

@if(ProductService.Products is null || ProductService.Products.Count == 0)
{
    <div class="shadow rounded mb-4 p-3 border border-3 border-secondary" style="background-color: white; width:100%; height:max-content; opacity:0.98; ">
        <h3>Loading...</h3>
    </div>
}
else
{
    <div class="row">
        @foreach(var product in ProductService.Products)
        {
            <div class="col">
                    <div class="card text-center bg-light mb-4 shadow rounded" style="width:20rem; height:15rem; opacity: 0.98">

                        <div class="card-header" style="background-image: linear-gradient(180deg, rgb(59, 150, 108) 0%, rgb(83, 176, 132) 70%)">
                            <h4><strong>@product.Name</strong></h4>
                        </div>
                        <div class="card-body">
                            <div class="card-text">
                                @if(product.Description.Length > 70)
                                {
                                    <span>@product.Description.Substring(0,70) ...</span>
                                }
                                else
                                {
                                    @product.Description
                                }
                            </div> 
                        </div>
                        <div class="mb-2" style="color:green;"><h5>@product.RetailPrice р</h5></div>
                        <button class="btn btn-outline-dark  mb-0" @onclick="(()=>AddToCart(product.Id))">В корзину</button>
                    </div>
            </div>
        }
    </div>

}






@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

    private async Task AddToCart(int id)
    {
        var product = ProductService.Products
        .Where(p => p.Id == id)
        .First();

        await CartService.AddToCart(product);

    }


}
